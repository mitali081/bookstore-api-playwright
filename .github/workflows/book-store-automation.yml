name: Bookstore API Automation

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:
    inputs:
      env:
        description: 'Select environment'
        required: true
        default: 'qa'
        type: choice
        options:
          - dev
          - qa
          - prod

jobs:
  run-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        environment: [dev, qa, prod]
      # Skip matrix for manual workflow dispatch
      fail-fast: false

    env:
      ENV: ${{ matrix.environment }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Set environment variables
        run: |
          case "${{ matrix.environment }}" in
            "dev")
              echo "API_KEY=${{ secrets.DEV_API_KEY }}" >> $GITHUB_ENV
              echo "BASE_URL=${{ secrets.DEV_BASE_URL }}" >> $GITHUB_ENV
              ;;
            "qa")
              echo "API_KEY=${{ secrets.QA_API_KEY }}" >> $GITHUB_ENV
              echo "BASE_URL=${{ secrets.QA_BASE_URL }}" >> $GITHUB_ENV
              ;;
            "prod")
              echo "API_KEY=${{ secrets.PROD_API_KEY }}" >> $GITHUB_ENV
              echo "BASE_URL=${{ secrets.PROD_BASE_URL }}" >> $GITHUB_ENV
              ;;
          esac

      - name: Run Playwright tests with coverage
        run: npx playwright test --reporter=html --reporter=json --reporter=line
        if: always()

      - name: Generate Allure Report
        run: |
          npm install -g allure-commandline
          allure generate allure-results --clean -o allure-report
        if: always()

      - name: Upload Test Reports
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.environment }}
          path: |
            test-output/html-report
            test-output/allure-results
            test-output/artifacts
            allure-results
            allure-report

      - name: Test Results Summary
        if: always()
        run: |
          echo "=== Playwright Test Summary ==="
          [ -d "test-output/html-report" ] && echo "HTML reports: test-output/html-report"
          [ -d "test-output/allure-results" ] && echo "Allure results: test-output/allure-results"
          [ -d "allure-report" ] && echo "Allure report: allure-report"
          [ -d "test-output/artifacts" ] && echo "Artifacts: test-output/artifacts"
          echo "=============================="
